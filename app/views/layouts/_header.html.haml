%nav.navbar.navbar-expand-lg.navbar-dark.bg-dark
  %a.navbar-brand{:href => "/"}
    /= image_tag 'logo.png', size: '20x20', alt: "logo", class: 'rounded'
    .fa.fa-graduation-cap
    Courses
  %button.navbar-toggler{"aria-controls" => "navbarSupportedContent", "aria-expanded" => "false", "aria-label" => "Toggle navigation", "data-target" => "#navbarSupportedContent", "data-toggle" => "collapse", :type => "button"}
    %span.navbar-toggler-icon
  #navbarSupportedContent.collapse.navbar-collapse
    /- if current_user && current_user.has_role?(:admin)
    - if current_user
      %ul.navbar-nav.mr-auto
        %li.nav-item{class: "#{'active font-weight-bold' if current_page?(courses_path)}"}
          = link_to courses_path, class: 'nav-link' do
            .fa.fa-graduation-cap
            Courses
        %li.nav-item{class: "#{'active font-weight-bold' if current_page?(new_course_path)}"}
          = link_to new_course_path, class: 'nav-link' do
            .fa.fa-plus
            New Course

        - if current_user&.has_role?(:admin)
          %li.nav-item.dropdown
            %a#adminDropdown.nav-link.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :href => "#", :role => "button"}
              .fa.fa-cog
              %b Admin
            .dropdown-menu.dropdown-menu-right{"aria-labelledby" => "adminDropdown"}
              = link_to users_path, class: "dropdown-item" do
                .fa.fa-users
                User
                .badge.badge-danger
                  = User.count
              = link_to enrollments_path, class: "dropdown-item" do
                .fa.fa-lock-open
                Enrollments
                .badge.badge-danger
                  = Enrollment.count
              = link_to static_pages_activity_path, class: "dropdown-item" do
                .fa.fa-bell
                Activity
              = link_to analytics_path, class: "dropdown-item" do
                .fa.fa-chart-line
                Analytics
              = link_to for_admin_all_courses_path, class: "dropdown-item" do
                .fa.fa-graduation-cap
                All courses
                .badge.badge-danger
                  = Course.count


        - if current_user&.has_role?(:teacher)
          %li.nav-item.dropdown
            %a#teacherDropdown.nav-link.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :href => "#", :role => "button"}
              .fa.fa-chalkboard-teacher
              %b Teach
            .dropdown-menu.dropdown-menu-right{"aria-labelledby" => "teacherDropdown"}
              = link_to new_course_path, class: 'dropdown-item' do
                .fa.fa-plus
                New Course
              = link_to created_courses_path, class: "dropdown-item" do
                .fa.fa-graduation-cap
                Created courses
                .badge.badge-danger
                  = current_user.courses_count
              = link_to my_students_enrollments_path, class: "dropdown-item" do
                .fa.fa-users
                My students
                .badge.badge-danger
                  = Enrollment.joins(:course).where(courses: { user_id: current_user.id }).count

        - if current_user&.has_role?(:student)
          %li.nav-item.dropdown
            %a#studentDropdown.nav-link.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :href => "#", :role => "button"}
              .fa.fa-graduation-cap
              %b Learn
            .dropdown-menu.dropdown-menu-right{"aria-labelledby" => "studentDropdown"}
              = link_to purchased_courses_path, class: 'dropdown-item' do
                .fa.fa-graduation-cap
                Purchased courses
                .badge.badge-danger
                  = current_user.enrollments_count
              = link_to pending_review_courses_path, class: "dropdown-item" do
                .fa.fa-star
                Pending review
                .badge.badge-danger
                  = current_user.enrollments.pending_review.count

      .form-inline.my-2.my-lg-0
        = form_tag(courses_path, method: :get) do
          .input-group
            = text_field_tag :title, params[:title], autocomplete: 'off', placeholder: "Search", class: 'form-control-sm'
            %span.input-group-append
              %button.btn.btn-primary.btn-sm{:type => "submit"}
                %span.fa.fa-search{"aria-hidden" => "true"}
      %ul.navbar-nav.mr-right
        %li.nav-item.dropdown
          %a#navbarDropdown.nav-link.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :href => "#", :role => "button"}
            %b= current_user.email
          .dropdown-menu.dropdown-menu-right{"aria-labelledby" => "navbarDropdown"}
            = link_to edit_user_registration_path, class: "dropdown-item" do
              .fa.fa-cog
              %b Account settings
            = link_to destroy_user_session_path, method: :delete, class: "dropdown-item" do
              .fa.fa-sign-out-alt
              %b Sign out
    - else
      %ul.navbar-nav.mr-auto
      %ul.navbar-nav.mr-right
        %li.nav-item{class: "#{'active font-weight-bold' if current_page?(new_user_registration_path)}"}
          = link_to 'Sign Up', new_user_registration_path, class: 'nav-link'
        %li.nav-item{class: "#{'active font-weight-bold' if current_page?(new_user_session_path)}"}
          = link_to 'Log In', new_user_session_path, class: 'nav-link'
        = link_to "Sign in with Google", user_google_oauth2_omniauth_authorize_path, method: :post
